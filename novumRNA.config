/*
========================================================================================
    NovumRNA config file
========================================================================================
    Default config options for all compute environments
----------------------------------------------------------------------------------------

*/

// Global default params, used in configs
params {
    
    // Input options
    input_fastq               = "/home/ausserh/projects/2021/CRCnoncanonical/NovumRNA/samplesheet_CRC_fastq_sub.csv"
    input_gtf                 = "/home/ausserh/projects/2021/CRCnoncanonical/NovumRNA/samplesheet_CRC_gtf_sub.csv"
    input_capture_gtf         = "/home/ausserh/projects/2021/CRCnoncanonical/Shen_Trincado_PCR_events/samplesheet_MDA-MB-231_negative_control_gtf.csv"

    // References
    genome              = "/data/genomes/hg38/fasta/gencode/GRCh38.primary_assembly.genome.fa"
    reference_GTF       = "/data/genomes/hg38/annotation/gencode/gencode.v38.primary_assembly.annotation.gtf"
    ref_proteome        = "/home/ausserh/myScratch/gencode.v41.pc_translations.fa"
    aligner             = "hisat"
    hisat_index         = "/data/projects/2021/CRCnoncanonical/NovumRNA_ref/Indices/hisat_genome_index/hisat_index"
    star_index          = "/data/projects/2021/CRCnoncanonical/NovumRNA_ref/Indices/star_index"
    inverted_bed        = "/data/projects/2021/CRCnoncanonical/TEC_capture_bed_new/Capture_bed/capture_bed.bed"
    HLA_ref             = "/data/projects/2019/NonCanonicalNeoantigens/HLA_II_typing/yara_index/hla_reference_rna"
    default_hla         = "/data/projects/2021/CRCnoncanonical/NovumRNA_ref/HLA_default.txt"
    default_hla_II      = "/data/projects/2021/CRCnoncanonical/NovumRNA_ref/HLA_II_default.txt"
    genome_length       = "/home/ausserh/myScratch/Annotation/chr_lengths_clean.genome"
    Annotation_2        = "/data/projects/2021/CRCnoncanonical/ERV_annotation.bed"

    // Directories (need to be in quotes)
    outdir              = "/home/ausserh/projects/2021/CRCnoncanonical/NovumRNA_CRC_VAF_test_short/"
    outdir_capture      = "/home/ausserh/projects/2021/CRCnoncanonical/NovumRNA_CRC_VAF_test_short/"
    outdir_ref          = "/data/projects/2021/CRCnoncanonical/NovumRNA_ref/"
    publish_dir_mode    = "copy"
    IEDB_check          = "/home/ausserh/projects/2021/CRCnoncanonical/NovumRNA_ref/iedb_install_ok.chck"
    novumrna_container  = '/home/ausserh/myScratch/NovumRNA_7.sif'
    pvactools_container = '/home/ausserh/myScratch/pVACtools_container_10.sif'

    // Filtering
    Ref_pep = "/home/ausserh/projects/2021/CRCnoncanonical/NovumRNA_ref/Pep_ref/Control_peptides_len_9 15_rmdup.fasta"

    // Arguments
    peptide_length      = "9 15"
    two_pass            = false
    riboseq             = false
    split_netMHCpan     = 4
    split_anno_2        = 1
    tpm_min_novel       = 2
    cov_min_novel       = 4
    tpm_max_diff        = 1
    cov_max_diff        = 4
    tpm_min_diff        = 10
    cov_min_diff        = 16
    BAM_cov             = 2

    // Stringtie_options
    longreads           = false

    // IEDB tools urls for MHCI and MHCII. These will be used for IEDB installation into resources.databases.IEDB_dir
    IEDB_MHCI_url  = "https://downloads.iedb.org/tools/mhci/3.1.2/IEDB_MHC_I-3.1.2.tar.gz"
    IEDB_MHCII_url = "https://downloads.iedb.org/tools/mhcii/3.1.6/IEDB_MHC_II-3.1.6.tar.gz"

    // REQUIRED: Path to the installation directory of HLA-HD
    // Please install HLA-HD locally, you can get your own copy of HLA-HD at:
    // https://www.genome.med.kyoto-u.ac.jp/HLA-HD/
    HLAHD_DIR = "/usr/local/bioinf/HLA_HD/hlahd.1.4.0/" // /path/to/hlhd.x.x.x/
}

process {

    withName: 'install_IEDB' {
        cpus = 1
        container = params.pvactools_container
        publishDir = [path: "${params.outdir_ref}iedb", mode: params.publish_dir_mode]
        
    }

    withName: 'pVACbind_class_I' {
        cpus = 1
        container = params.pvactools_container
        publishDir = [path: "${params.outdir}bind_class_I", mode: params.publish_dir_mode]
        
    }

    withName: 'pVACbind_class_II' {
        cpus = 1
        container = params.pvactools_container
        publishDir = [path: "${params.outdir}bind_class_II", mode: params.publish_dir_mode]
        
    }

    withName: 'Indices' {
        cpus = 4
        container = params.novumrna_container
        publishDir = [path: "${params.outdir_ref}Indices", mode: params.publish_dir_mode]
        
    }
    withName: 'OptiType' {
        cpus = 8
        container = params.novumrna_container
        publishDir = [path: "${params.outdir}OptiType", mode: params.publish_dir_mode]
        
    }

    withName: 'alignment' {
        cpus = 8
        container = params.novumrna_container
        publishDir = [path: "${params.outdir}alignment", mode: params.publish_dir_mode]
        
    }

    withName: 'StringTie' {
        cpus = 1
        container = params.novumrna_container
        publishDir = [path: "${params.outdir}StringTie", mode: params.publish_dir_mode]
        
    }

    withName: HLA_extraction {
        cpus = 1
        container = params.novumrna_container
        publishDir = [path: "${params.outdir}HLA_extraction", mode: params.publish_dir_mode]
        
    }

    withName: HLA_HD {
        cpus = 12
        container = params.pvactools_container
        publishDir = [path: "${params.outdir}HLA_HD", mode: params.publish_dir_mode]
        
    }

    withName: Create_capture_bed {
        cpus = 1
        container = params.novumrna_container
        publishDir = [path: "${params.outdir_ref}Capture_bed", mode: params.publish_dir_mode]
        
    }

    withName: Protein_to_peptides {
        cpus = 1
        container = params.novumrna_container
        publishDir = [path: "${params.outdir_ref}Pep_ref", mode: 'symlink']
        
    }

    withName: Filtering {
        cpus = 1
        container = params.novumrna_container
        publishDir = [path: "${params.outdir}Filtering", mode: params.publish_dir_mode]
        
    }


    withName: 'Translation' {
        cpus = 4
        container = params.novumrna_container
        publishDir = [path: "${params.outdir}Translation", mode: params.publish_dir_mode]
        
    }

    withName: 'Translation_2' {
        cpus = 1
        container = params.novumrna_container
        publishDir = [path: "${params.outdir}Translation_2", mode: params.publish_dir_mode]
        
    }

    withName: Annotation {
        cpus = 32
        container = params.novumrna_container
        publishDir = [path: "${params.outdir}Annotation", mode: params.publish_dir_mode]
        
    }

    withName: Annotation_2 {
        cpus = 1
        container = params.novumrna_container
        publishDir = [path: "${params.outdir}Annotation_2", mode: params.publish_dir_mode]
        
    }

     withName: final_out_1 {
        cpus = 1
        container = params.novumrna_container
        publishDir = [path: "${params.outdir}final_out", mode: params.publish_dir_mode]
        
    }

    withName: final_out_2 {
        cpus = 1
        container = params.novumrna_container
        publishDir = [path: "${params.outdir}final_out", mode: params.publish_dir_mode]
        
    }

    withName: Combine {
        cpus = 1
        container = params.novumrna_container
        publishDir = [path: "${params.outdir}Combine", mode: params.publish_dir_mode]
        
    }

    withName: Rerun_samplesheet {
        cpus = 1
        container = params.novumrna_container
        publishDir = [path: "${params.outdir}Rerun_samplesheet", mode: params.publish_dir_mode]
        
    }

    withName: Metadata_MHCI {
        cpus = 1
        container = params.novumrna_container
        publishDir = [path: "${params.outdir}Metadata_MHCI", mode: params.publish_dir_mode]
        
    }

    withName: Metadata_MHCII {
        cpus = 1
        container = params.novumrna_container
        publishDir = [path: "${params.outdir}Metadata_MHCII", mode: params.publish_dir_mode]
        
    }

}

profiles {
  icbi_mine {
   process {
      executor = 'sge'
      penv = 'smp'
      clusterOptions = { '-V -S /bin/bash -q all.q' }
    }
  }
  singularity {
    singularity.enabled = true
    singularity.autoMounts = true
    singularity.runOptions = "--no-home" + " -B " + params.outdir_ref + "iedb:/opt/iedb/" + " -B /data/projects/2021/CRCnoncanonical/NovumRNA/bin:/scripts/" + " -B " + params.HLAHD_DIR + ":/opt/hlahd/"
  }
  icbi_long {
   singularity.autoMounts = true
   singularity.pullTimeout = '30 min'
   process {
      executor = 'sge'
      penv = 'smp'
      clusterOptions = { '-V -S /bin/bash -q long.q' }
    }
  }
}


executor {
  $sge {
    queueSize = 600
  }
}