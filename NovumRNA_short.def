Bootstrap: docker
From: ubuntu:latest

%environment
    # Set environment variables
    export PATH="/usr/local/bin:$PATH"
    export PATH="/usr/bin/java:$PATH"
    export PATH="/opt/optitype/bin:/usr/local/bin:$PATH"
    export LD_LIBRARY_PATH="/opt/hdf5/lib:$LD_LIBRARY_PATH"
    export HDF5_DIR="/opt/hdf5"
    export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
    export PATH=$JAVA_HOME/bin:$PATH
    export PATH="/usr/bin/cbc:$PATH"

%post
    # Install system dependencies
    apt-get update && apt-get install -y \
        build-essential \
        git \
        wget \
        zlib1g-dev \
        autoconf \
        libtool \
        libboost-dev \
        libbz2-dev \
        liblzma-dev \
        libncurses5-dev \
        pkg-config \
        python3 \
        python3-dev \
        python3-pip \
        gcc \
        libcurl4-gnutls-dev \
        libssl-dev \
        unzip \
        openjdk-11-jdk \
        g++ \
        libhdf5-dev \
        subversion \
        coinor-cbc \
        glpk-utils \
        liblapack-dev \
        libatlas-base-dev \
        libblas-dev \
        libffi-dev \
        cmake \
        libopenblas-dev

    # Install Python packages
    /usr/bin/pip3 install numpy
    /usr/bin/pip3 install pyomo
    /usr/bin/pip3 install pysam
    /usr/bin/pip3 install matplotlib
    /usr/bin/pip3 install tables
    /usr/bin/pip3 install pandas
    /usr/bin/pip3 install future
    /usr/bin/pip3 install biopython
    /usr/bin/pip3 install mapply

    mkdir /scripts/
    mkdir /references/

    # Install Jvarkit
    git clone --branch v20200206 https://github.com/lindenb/jvarkit.git
    cd jvarkit
    ./gradlew biostar154220 sam4weblogo sortsamrefname
    cd ..
    
    # Install Samtools
    wget https://github.com/samtools/samtools/releases/download/1.12/samtools-1.12.tar.bz2
    tar xf samtools-1.12.tar.bz2
    cd samtools-1.12
    ./configure
    make && make install
    cd ..    

    # YARA_mapper
    git clone https://github.com/seqan/seqan.git
    mkdir yara-build
    cd yara-build
    cmake ../seqan -DSEQAN_BUILD_SYSTEM=APP:yara -DCMAKE_CXX_COMPILER=/usr/bin/g++
    make all
    cd ..
    cp yara-build/bin/yara* /usr/local/bin/
    # RazerS3
    mkdir seqan/build
    cd seqan/build
    cmake .. -DCMAKE_BUILD_TYPE=Release
    make razers3
    cd ..
    cd ..

    # Install OptiType
    wget https://github.com/FRED-2/OptiType/archive/v1.3.3.tar.gz
    tar xf v1.3.3.tar.gz
    cd OptiType-1.3.3
    cp config.ini.example config.ini
    cd ..

    # Install Bedtools
    wget https://github.com/arq5x/bedtools2/releases/download/v2.31.0/bedtools-2.31.0.tar.gz
    tar -zxvf bedtools-2.31.0.tar.gz
    cd bedtools2
    make
    cd ..

    # Install HISAT2
    wget https://cloud.biohpc.swmed.edu/index.php/s/hisat2-210-Linux_x86_64/download
    mv download hisat2-2.1.0.zip
    unzip hisat2-2.1.0.zip
    cd hisat2-2.1.0
    make && make install
    cd ..

    # Install STAR
    wget https://github.com/alexdobin/STAR/archive/2.7.9a.tar.gz
    tar xf 2.7.9a.tar.gz
    cd STAR-2.7.9a/source
    make STAR
    cp STAR /usr/local/bin/
    cd ../..

    # Install StringTie
    wget http://ccb.jhu.edu/software/stringtie/dl/stringtie-2.1.4.Linux_x86_64.tar.gz
    tar xf stringtie-2.1.4.Linux_x86_64.tar.gz
    cp stringtie-2.1.4.Linux_x86_64/stringtie /usr/local/bin/

    # Install Seqkit
    wget https://github.com/shenwei356/seqkit/releases/download/v2.0.0/seqkit_linux_amd64.tar.gz
    tar xf seqkit_linux_amd64.tar.gz
    cp seqkit /usr/local/bin/

    # Install GFFread
    wget https://github.com/gpertea/gffread/releases/download/v0.12.3/gffread-0.12.3.Linux_x86_64.tar.gz
    tar xf gffread-0.12.3.Linux_x86_64.tar.gz
    cp gffread-0.12.3.Linux_x86_64/gffread /usr/local/bin/

%runscript
    echo "Singularity container for Nextflow pipeline"

